{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/lunaaziz/tutorial-page/ktutorial/tina/__generated__/types.ts"],"sourcesContent":["//@ts-nocheck\n  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina\n  export function gql(strings: TemplateStringsArray, ...args: string[]): string {\n    let str = ''\n    strings.forEach((string, i) => {\n      str += string + (args[i] || '')\n    })\n    return str\n  }\n  export type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nexport type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };\nexport type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: { input: string; output: string; }\n  String: { input: string; output: string; }\n  Boolean: { input: boolean; output: boolean; }\n  Int: { input: number; output: number; }\n  Float: { input: number; output: number; }\n  /** References another document, used as a foreign key */\n  Reference: { input: any; output: any; }\n  JSON: { input: any; output: any; }\n};\n\nexport type SystemInfo = {\n  __typename?: 'SystemInfo';\n  filename: Scalars['String']['output'];\n  title?: Maybe<Scalars['String']['output']>;\n  basename: Scalars['String']['output'];\n  hasReferences?: Maybe<Scalars['Boolean']['output']>;\n  breadcrumbs: Array<Scalars['String']['output']>;\n  path: Scalars['String']['output'];\n  relativePath: Scalars['String']['output'];\n  extension: Scalars['String']['output'];\n  template: Scalars['String']['output'];\n  collection: Collection;\n};\n\n\nexport type SystemInfoBreadcrumbsArgs = {\n  excludeExtension?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\nexport type Folder = {\n  __typename?: 'Folder';\n  name: Scalars['String']['output'];\n  path: Scalars['String']['output'];\n};\n\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  hasPreviousPage: Scalars['Boolean']['output'];\n  hasNextPage: Scalars['Boolean']['output'];\n  startCursor: Scalars['String']['output'];\n  endCursor: Scalars['String']['output'];\n};\n\nexport type Node = {\n  id: Scalars['ID']['output'];\n};\n\nexport type Document = {\n  id: Scalars['ID']['output'];\n  _sys?: Maybe<SystemInfo>;\n  _values: Scalars['JSON']['output'];\n};\n\n/** A relay-compliant pagination connection */\nexport type Connection = {\n  totalCount: Scalars['Float']['output'];\n  pageInfo: PageInfo;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  getOptimizedQuery?: Maybe<Scalars['String']['output']>;\n  collection: Collection;\n  collections: Array<Collection>;\n  node: Node;\n  document: DocumentNode;\n  page: Page;\n  pageConnection: PageConnection;\n  post: Post;\n  postConnection: PostConnection;\n  tutorial: Tutorial;\n  tutorialConnection: TutorialConnection;\n  author: Author;\n  authorConnection: AuthorConnection;\n  tag: Tag;\n  tagConnection: TagConnection;\n  global: Global;\n  globalConnection: GlobalConnection;\n};\n\n\nexport type QueryGetOptimizedQueryArgs = {\n  queryString: Scalars['String']['input'];\n};\n\n\nexport type QueryCollectionArgs = {\n  collection?: InputMaybe<Scalars['String']['input']>;\n};\n\n\nexport type QueryNodeArgs = {\n  id?: InputMaybe<Scalars['String']['input']>;\n};\n\n\nexport type QueryDocumentArgs = {\n  collection?: InputMaybe<Scalars['String']['input']>;\n  relativePath?: InputMaybe<Scalars['String']['input']>;\n};\n\n\nexport type QueryPageArgs = {\n  relativePath?: InputMaybe<Scalars['String']['input']>;\n};\n\n\nexport type QueryPageConnectionArgs = {\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<PageFilter>;\n};\n\n\nexport type QueryPostArgs = {\n  relativePath?: InputMaybe<Scalars['String']['input']>;\n};\n\n\nexport type QueryPostConnectionArgs = {\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<PostFilter>;\n};\n\n\nexport type QueryTutorialArgs = {\n  relativePath?: InputMaybe<Scalars['String']['input']>;\n};\n\n\nexport type QueryTutorialConnectionArgs = {\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<TutorialFilter>;\n};\n\n\nexport type QueryAuthorArgs = {\n  relativePath?: InputMaybe<Scalars['String']['input']>;\n};\n\n\nexport type QueryAuthorConnectionArgs = {\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<AuthorFilter>;\n};\n\n\nexport type QueryTagArgs = {\n  relativePath?: InputMaybe<Scalars['String']['input']>;\n};\n\n\nexport type QueryTagConnectionArgs = {\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<TagFilter>;\n};\n\n\nexport type QueryGlobalArgs = {\n  relativePath?: InputMaybe<Scalars['String']['input']>;\n};\n\n\nexport type QueryGlobalConnectionArgs = {\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<GlobalFilter>;\n};\n\nexport type DocumentFilter = {\n  page?: InputMaybe<PageFilter>;\n  post?: InputMaybe<PostFilter>;\n  tutorial?: InputMaybe<TutorialFilter>;\n  author?: InputMaybe<AuthorFilter>;\n  tag?: InputMaybe<TagFilter>;\n  global?: InputMaybe<GlobalFilter>;\n};\n\nexport type DocumentConnectionEdges = {\n  __typename?: 'DocumentConnectionEdges';\n  cursor: Scalars['String']['output'];\n  node?: Maybe<DocumentNode>;\n};\n\nexport type DocumentConnection = Connection & {\n  __typename?: 'DocumentConnection';\n  pageInfo: PageInfo;\n  totalCount: Scalars['Float']['output'];\n  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;\n};\n\nexport type Collection = {\n  __typename?: 'Collection';\n  name: Scalars['String']['output'];\n  slug: Scalars['String']['output'];\n  label?: Maybe<Scalars['String']['output']>;\n  path: Scalars['String']['output'];\n  format?: Maybe<Scalars['String']['output']>;\n  matches?: Maybe<Scalars['String']['output']>;\n  templates?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;\n  fields?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;\n  documents: DocumentConnection;\n};\n\n\nexport type CollectionDocumentsArgs = {\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<DocumentFilter>;\n  folder?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type DocumentNode = Page | Post | Tutorial | Author | Tag | Global | Folder;\n\nexport type PageBlocksHeroActionsIcon = {\n  __typename?: 'PageBlocksHeroActionsIcon';\n  name?: Maybe<Scalars['String']['output']>;\n  color?: Maybe<Scalars['String']['output']>;\n  style?: Maybe<Scalars['String']['output']>;\n};\n\nexport type PageBlocksHeroActions = {\n  __typename?: 'PageBlocksHeroActions';\n  label?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n  icon?: Maybe<PageBlocksHeroActionsIcon>;\n  link?: Maybe<Scalars['String']['output']>;\n};\n\nexport type PageBlocksHeroImage = {\n  __typename?: 'PageBlocksHeroImage';\n  src?: Maybe<Scalars['String']['output']>;\n  alt?: Maybe<Scalars['String']['output']>;\n  videoUrl?: Maybe<Scalars['String']['output']>;\n};\n\nexport type PageBlocksHero = {\n  __typename?: 'PageBlocksHero';\n  background?: Maybe<Scalars['String']['output']>;\n  headline?: Maybe<Scalars['String']['output']>;\n  tagline?: Maybe<Scalars['String']['output']>;\n  actions?: Maybe<Array<Maybe<PageBlocksHeroActions>>>;\n  image?: Maybe<PageBlocksHeroImage>;\n};\n\nexport type PageBlocksCallout = {\n  __typename?: 'PageBlocksCallout';\n  background?: Maybe<Scalars['String']['output']>;\n  text?: Maybe<Scalars['String']['output']>;\n  url?: Maybe<Scalars['String']['output']>;\n};\n\nexport type PageBlocksFeaturesItemsIcon = {\n  __typename?: 'PageBlocksFeaturesItemsIcon';\n  name?: Maybe<Scalars['String']['output']>;\n  color?: Maybe<Scalars['String']['output']>;\n  style?: Maybe<Scalars['String']['output']>;\n};\n\nexport type PageBlocksFeaturesItems = {\n  __typename?: 'PageBlocksFeaturesItems';\n  icon?: Maybe<PageBlocksFeaturesItemsIcon>;\n  title?: Maybe<Scalars['String']['output']>;\n  text?: Maybe<Scalars['JSON']['output']>;\n};\n\nexport type PageBlocksFeatures = {\n  __typename?: 'PageBlocksFeatures';\n  background?: Maybe<Scalars['String']['output']>;\n  title?: Maybe<Scalars['String']['output']>;\n  description?: Maybe<Scalars['String']['output']>;\n  items?: Maybe<Array<Maybe<PageBlocksFeaturesItems>>>;\n};\n\nexport type PageBlocksStatsStats = {\n  __typename?: 'PageBlocksStatsStats';\n  stat?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n};\n\nexport type PageBlocksStats = {\n  __typename?: 'PageBlocksStats';\n  background?: Maybe<Scalars['String']['output']>;\n  title?: Maybe<Scalars['String']['output']>;\n  description?: Maybe<Scalars['String']['output']>;\n  stats?: Maybe<Array<Maybe<PageBlocksStatsStats>>>;\n};\n\nexport type PageBlocksCtaActionsIcon = {\n  __typename?: 'PageBlocksCtaActionsIcon';\n  name?: Maybe<Scalars['String']['output']>;\n  color?: Maybe<Scalars['String']['output']>;\n  style?: Maybe<Scalars['String']['output']>;\n};\n\nexport type PageBlocksCtaActions = {\n  __typename?: 'PageBlocksCtaActions';\n  label?: Maybe<Scalars['String']['output']>;\n  type?: Maybe<Scalars['String']['output']>;\n  icon?: Maybe<PageBlocksCtaActionsIcon>;\n  link?: Maybe<Scalars['String']['output']>;\n};\n\nexport type PageBlocksCta = {\n  __typename?: 'PageBlocksCta';\n  title?: Maybe<Scalars['String']['output']>;\n  description?: Maybe<Scalars['String']['output']>;\n  actions?: Maybe<Array<Maybe<PageBlocksCtaActions>>>;\n};\n\nexport type PageBlocksContent = {\n  __typename?: 'PageBlocksContent';\n  background?: Maybe<Scalars['String']['output']>;\n  body?: Maybe<Scalars['JSON']['output']>;\n};\n\nexport type PageBlocksTestimonialTestimonials = {\n  __typename?: 'PageBlocksTestimonialTestimonials';\n  quote?: Maybe<Scalars['String']['output']>;\n  author?: Maybe<Scalars['String']['output']>;\n  role?: Maybe<Scalars['String']['output']>;\n  avatar?: Maybe<Scalars['String']['output']>;\n};\n\nexport type PageBlocksTestimonial = {\n  __typename?: 'PageBlocksTestimonial';\n  background?: Maybe<Scalars['String']['output']>;\n  title?: Maybe<Scalars['String']['output']>;\n  description?: Maybe<Scalars['String']['output']>;\n  testimonials?: Maybe<Array<Maybe<PageBlocksTestimonialTestimonials>>>;\n};\n\nexport type PageBlocksVideo = {\n  __typename?: 'PageBlocksVideo';\n  background?: Maybe<Scalars['String']['output']>;\n  color?: Maybe<Scalars['String']['output']>;\n  url?: Maybe<Scalars['String']['output']>;\n  autoPlay?: Maybe<Scalars['Boolean']['output']>;\n  loop?: Maybe<Scalars['Boolean']['output']>;\n};\n\nexport type PageBlocks = PageBlocksHero | PageBlocksCallout | PageBlocksFeatures | PageBlocksStats | PageBlocksCta | PageBlocksContent | PageBlocksTestimonial | PageBlocksVideo;\n\nexport type Page = Node & Document & {\n  __typename?: 'Page';\n  blocks?: Maybe<Array<Maybe<PageBlocks>>>;\n  id: Scalars['ID']['output'];\n  _sys: SystemInfo;\n  _values: Scalars['JSON']['output'];\n};\n\nexport type StringFilter = {\n  startsWith?: InputMaybe<Scalars['String']['input']>;\n  eq?: InputMaybe<Scalars['String']['input']>;\n  exists?: InputMaybe<Scalars['Boolean']['input']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;\n};\n\nexport type PageBlocksHeroActionsIconFilter = {\n  name?: InputMaybe<StringFilter>;\n  color?: InputMaybe<StringFilter>;\n  style?: InputMaybe<StringFilter>;\n};\n\nexport type PageBlocksHeroActionsFilter = {\n  label?: InputMaybe<StringFilter>;\n  type?: InputMaybe<StringFilter>;\n  icon?: InputMaybe<PageBlocksHeroActionsIconFilter>;\n  link?: InputMaybe<StringFilter>;\n};\n\nexport type ImageFilter = {\n  startsWith?: InputMaybe<Scalars['String']['input']>;\n  eq?: InputMaybe<Scalars['String']['input']>;\n  exists?: InputMaybe<Scalars['Boolean']['input']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;\n};\n\nexport type PageBlocksHeroImageFilter = {\n  src?: InputMaybe<ImageFilter>;\n  alt?: InputMaybe<StringFilter>;\n  videoUrl?: InputMaybe<StringFilter>;\n};\n\nexport type PageBlocksHeroFilter = {\n  background?: InputMaybe<StringFilter>;\n  headline?: InputMaybe<StringFilter>;\n  tagline?: InputMaybe<StringFilter>;\n  actions?: InputMaybe<PageBlocksHeroActionsFilter>;\n  image?: InputMaybe<PageBlocksHeroImageFilter>;\n};\n\nexport type PageBlocksCalloutFilter = {\n  background?: InputMaybe<StringFilter>;\n  text?: InputMaybe<StringFilter>;\n  url?: InputMaybe<StringFilter>;\n};\n\nexport type PageBlocksFeaturesItemsIconFilter = {\n  name?: InputMaybe<StringFilter>;\n  color?: InputMaybe<StringFilter>;\n  style?: InputMaybe<StringFilter>;\n};\n\nexport type RichTextFilter = {\n  startsWith?: InputMaybe<Scalars['String']['input']>;\n  eq?: InputMaybe<Scalars['String']['input']>;\n  exists?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\nexport type PageBlocksFeaturesItemsFilter = {\n  icon?: InputMaybe<PageBlocksFeaturesItemsIconFilter>;\n  title?: InputMaybe<StringFilter>;\n  text?: InputMaybe<RichTextFilter>;\n};\n\nexport type PageBlocksFeaturesFilter = {\n  background?: InputMaybe<StringFilter>;\n  title?: InputMaybe<StringFilter>;\n  description?: InputMaybe<StringFilter>;\n  items?: InputMaybe<PageBlocksFeaturesItemsFilter>;\n};\n\nexport type PageBlocksStatsStatsFilter = {\n  stat?: InputMaybe<StringFilter>;\n  type?: InputMaybe<StringFilter>;\n};\n\nexport type PageBlocksStatsFilter = {\n  background?: InputMaybe<StringFilter>;\n  title?: InputMaybe<StringFilter>;\n  description?: InputMaybe<StringFilter>;\n  stats?: InputMaybe<PageBlocksStatsStatsFilter>;\n};\n\nexport type PageBlocksCtaActionsIconFilter = {\n  name?: InputMaybe<StringFilter>;\n  color?: InputMaybe<StringFilter>;\n  style?: InputMaybe<StringFilter>;\n};\n\nexport type PageBlocksCtaActionsFilter = {\n  label?: InputMaybe<StringFilter>;\n  type?: InputMaybe<StringFilter>;\n  icon?: InputMaybe<PageBlocksCtaActionsIconFilter>;\n  link?: InputMaybe<StringFilter>;\n};\n\nexport type PageBlocksCtaFilter = {\n  title?: InputMaybe<StringFilter>;\n  description?: InputMaybe<StringFilter>;\n  actions?: InputMaybe<PageBlocksCtaActionsFilter>;\n};\n\nexport type PageBlocksContentBodyScriptCopyBlockFilter = {\n  codeLanguage?: InputMaybe<StringFilter>;\n  lightTheme?: InputMaybe<StringFilter>;\n  darkTheme?: InputMaybe<StringFilter>;\n  commandMap?: InputMaybe<StringFilter>;\n};\n\nexport type PageBlocksContentBodyFilter = {\n  scriptCopyBlock?: InputMaybe<PageBlocksContentBodyScriptCopyBlockFilter>;\n};\n\nexport type PageBlocksContentFilter = {\n  background?: InputMaybe<StringFilter>;\n  body?: InputMaybe<PageBlocksContentBodyFilter>;\n};\n\nexport type PageBlocksTestimonialTestimonialsFilter = {\n  quote?: InputMaybe<StringFilter>;\n  author?: InputMaybe<StringFilter>;\n  role?: InputMaybe<StringFilter>;\n  avatar?: InputMaybe<ImageFilter>;\n};\n\nexport type PageBlocksTestimonialFilter = {\n  background?: InputMaybe<StringFilter>;\n  title?: InputMaybe<StringFilter>;\n  description?: InputMaybe<StringFilter>;\n  testimonials?: InputMaybe<PageBlocksTestimonialTestimonialsFilter>;\n};\n\nexport type BooleanFilter = {\n  eq?: InputMaybe<Scalars['Boolean']['input']>;\n  exists?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\nexport type PageBlocksVideoFilter = {\n  background?: InputMaybe<StringFilter>;\n  color?: InputMaybe<StringFilter>;\n  url?: InputMaybe<StringFilter>;\n  autoPlay?: InputMaybe<BooleanFilter>;\n  loop?: InputMaybe<BooleanFilter>;\n};\n\nexport type PageBlocksFilter = {\n  hero?: InputMaybe<PageBlocksHeroFilter>;\n  callout?: InputMaybe<PageBlocksCalloutFilter>;\n  features?: InputMaybe<PageBlocksFeaturesFilter>;\n  stats?: InputMaybe<PageBlocksStatsFilter>;\n  cta?: InputMaybe<PageBlocksCtaFilter>;\n  content?: InputMaybe<PageBlocksContentFilter>;\n  testimonial?: InputMaybe<PageBlocksTestimonialFilter>;\n  video?: InputMaybe<PageBlocksVideoFilter>;\n};\n\nexport type PageFilter = {\n  blocks?: InputMaybe<PageBlocksFilter>;\n};\n\nexport type PageConnectionEdges = {\n  __typename?: 'PageConnectionEdges';\n  cursor: Scalars['String']['output'];\n  node?: Maybe<Page>;\n};\n\nexport type PageConnection = Connection & {\n  __typename?: 'PageConnection';\n  pageInfo: PageInfo;\n  totalCount: Scalars['Float']['output'];\n  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;\n};\n\nexport type PostAuthor = Author;\n\nexport type PostTagsTag = Tag;\n\nexport type PostTags = {\n  __typename?: 'PostTags';\n  tag?: Maybe<PostTagsTag>;\n};\n\nexport type Post = Node & Document & {\n  __typename?: 'Post';\n  title: Scalars['String']['output'];\n  heroImg?: Maybe<Scalars['String']['output']>;\n  excerpt?: Maybe<Scalars['JSON']['output']>;\n  author?: Maybe<PostAuthor>;\n  date?: Maybe<Scalars['String']['output']>;\n  tags?: Maybe<Array<Maybe<PostTags>>>;\n  _body?: Maybe<Scalars['JSON']['output']>;\n  id: Scalars['ID']['output'];\n  _sys: SystemInfo;\n  _values: Scalars['JSON']['output'];\n};\n\nexport type PostAuthorFilter = {\n  author?: InputMaybe<AuthorFilter>;\n};\n\nexport type DatetimeFilter = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  eq?: InputMaybe<Scalars['String']['input']>;\n  exists?: InputMaybe<Scalars['Boolean']['input']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;\n};\n\nexport type PostTagsTagFilter = {\n  tag?: InputMaybe<TagFilter>;\n};\n\nexport type PostTagsFilter = {\n  tag?: InputMaybe<PostTagsTagFilter>;\n};\n\nexport type Post_BodyBlockQuoteFilter = {\n  children?: InputMaybe<RichTextFilter>;\n  authorName?: InputMaybe<StringFilter>;\n};\n\nexport type Post_BodyDateTimeFilter = {\n  format?: InputMaybe<StringFilter>;\n};\n\nexport type Post_BodyNewsletterSignupFilter = {\n  children?: InputMaybe<RichTextFilter>;\n  placeholder?: InputMaybe<StringFilter>;\n  buttonText?: InputMaybe<StringFilter>;\n  disclaimer?: InputMaybe<RichTextFilter>;\n};\n\nexport type Post_BodyVideoFilter = {\n  background?: InputMaybe<StringFilter>;\n  color?: InputMaybe<StringFilter>;\n  url?: InputMaybe<StringFilter>;\n  autoPlay?: InputMaybe<BooleanFilter>;\n  loop?: InputMaybe<BooleanFilter>;\n};\n\nexport type Post_BodyFilter = {\n  BlockQuote?: InputMaybe<Post_BodyBlockQuoteFilter>;\n  DateTime?: InputMaybe<Post_BodyDateTimeFilter>;\n  NewsletterSignup?: InputMaybe<Post_BodyNewsletterSignupFilter>;\n  video?: InputMaybe<Post_BodyVideoFilter>;\n};\n\nexport type PostFilter = {\n  title?: InputMaybe<StringFilter>;\n  heroImg?: InputMaybe<ImageFilter>;\n  excerpt?: InputMaybe<RichTextFilter>;\n  author?: InputMaybe<PostAuthorFilter>;\n  date?: InputMaybe<DatetimeFilter>;\n  tags?: InputMaybe<PostTagsFilter>;\n  _body?: InputMaybe<Post_BodyFilter>;\n};\n\nexport type PostConnectionEdges = {\n  __typename?: 'PostConnectionEdges';\n  cursor: Scalars['String']['output'];\n  node?: Maybe<Post>;\n};\n\nexport type PostConnection = Connection & {\n  __typename?: 'PostConnection';\n  pageInfo: PageInfo;\n  totalCount: Scalars['Float']['output'];\n  edges?: Maybe<Array<Maybe<PostConnectionEdges>>>;\n};\n\nexport type Tutorial = Node & Document & {\n  __typename?: 'Tutorial';\n  title: Scalars['String']['output'];\n  description?: Maybe<Scalars['String']['output']>;\n  category?: Maybe<Scalars['String']['output']>;\n  difficulty?: Maybe<Scalars['String']['output']>;\n  duration?: Maybe<Scalars['String']['output']>;\n  image?: Maybe<Scalars['String']['output']>;\n  date?: Maybe<Scalars['String']['output']>;\n  video_url?: Maybe<Scalars['String']['output']>;\n  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  _body?: Maybe<Scalars['JSON']['output']>;\n  id: Scalars['ID']['output'];\n  _sys: SystemInfo;\n  _values: Scalars['JSON']['output'];\n};\n\nexport type Tutorial_BodyDateTimeFilter = {\n  format?: InputMaybe<StringFilter>;\n};\n\nexport type Tutorial_BodyBlockQuoteFilter = {\n  children?: InputMaybe<RichTextFilter>;\n  authorName?: InputMaybe<StringFilter>;\n};\n\nexport type Tutorial_BodyNewsletterSignupFilter = {\n  children?: InputMaybe<RichTextFilter>;\n  placeholder?: InputMaybe<StringFilter>;\n  buttonText?: InputMaybe<StringFilter>;\n  disclaimer?: InputMaybe<RichTextFilter>;\n};\n\nexport type Tutorial_BodyFilter = {\n  DateTime?: InputMaybe<Tutorial_BodyDateTimeFilter>;\n  BlockQuote?: InputMaybe<Tutorial_BodyBlockQuoteFilter>;\n  NewsletterSignup?: InputMaybe<Tutorial_BodyNewsletterSignupFilter>;\n};\n\nexport type TutorialFilter = {\n  title?: InputMaybe<StringFilter>;\n  description?: InputMaybe<StringFilter>;\n  category?: InputMaybe<StringFilter>;\n  difficulty?: InputMaybe<StringFilter>;\n  duration?: InputMaybe<StringFilter>;\n  image?: InputMaybe<ImageFilter>;\n  date?: InputMaybe<DatetimeFilter>;\n  video_url?: InputMaybe<StringFilter>;\n  tags?: InputMaybe<StringFilter>;\n  _body?: InputMaybe<Tutorial_BodyFilter>;\n};\n\nexport type TutorialConnectionEdges = {\n  __typename?: 'TutorialConnectionEdges';\n  cursor: Scalars['String']['output'];\n  node?: Maybe<Tutorial>;\n};\n\nexport type TutorialConnection = Connection & {\n  __typename?: 'TutorialConnection';\n  pageInfo: PageInfo;\n  totalCount: Scalars['Float']['output'];\n  edges?: Maybe<Array<Maybe<TutorialConnectionEdges>>>;\n};\n\nexport type Author = Node & Document & {\n  __typename?: 'Author';\n  name: Scalars['String']['output'];\n  avatar?: Maybe<Scalars['String']['output']>;\n  id: Scalars['ID']['output'];\n  _sys: SystemInfo;\n  _values: Scalars['JSON']['output'];\n};\n\nexport type AuthorFilter = {\n  name?: InputMaybe<StringFilter>;\n  avatar?: InputMaybe<ImageFilter>;\n};\n\nexport type AuthorConnectionEdges = {\n  __typename?: 'AuthorConnectionEdges';\n  cursor: Scalars['String']['output'];\n  node?: Maybe<Author>;\n};\n\nexport type AuthorConnection = Connection & {\n  __typename?: 'AuthorConnection';\n  pageInfo: PageInfo;\n  totalCount: Scalars['Float']['output'];\n  edges?: Maybe<Array<Maybe<AuthorConnectionEdges>>>;\n};\n\nexport type Tag = Node & Document & {\n  __typename?: 'Tag';\n  name: Scalars['String']['output'];\n  id: Scalars['ID']['output'];\n  _sys: SystemInfo;\n  _values: Scalars['JSON']['output'];\n};\n\nexport type TagFilter = {\n  name?: InputMaybe<StringFilter>;\n};\n\nexport type TagConnectionEdges = {\n  __typename?: 'TagConnectionEdges';\n  cursor: Scalars['String']['output'];\n  node?: Maybe<Tag>;\n};\n\nexport type TagConnection = Connection & {\n  __typename?: 'TagConnection';\n  pageInfo: PageInfo;\n  totalCount: Scalars['Float']['output'];\n  edges?: Maybe<Array<Maybe<TagConnectionEdges>>>;\n};\n\nexport type GlobalHeaderIcon = {\n  __typename?: 'GlobalHeaderIcon';\n  name?: Maybe<Scalars['String']['output']>;\n  color?: Maybe<Scalars['String']['output']>;\n  style?: Maybe<Scalars['String']['output']>;\n};\n\nexport type GlobalHeaderNav = {\n  __typename?: 'GlobalHeaderNav';\n  href?: Maybe<Scalars['String']['output']>;\n  label?: Maybe<Scalars['String']['output']>;\n};\n\nexport type GlobalHeader = {\n  __typename?: 'GlobalHeader';\n  icon?: Maybe<GlobalHeaderIcon>;\n  name?: Maybe<Scalars['String']['output']>;\n  color?: Maybe<Scalars['String']['output']>;\n  nav?: Maybe<Array<Maybe<GlobalHeaderNav>>>;\n};\n\nexport type GlobalFooterSocialIcon = {\n  __typename?: 'GlobalFooterSocialIcon';\n  name?: Maybe<Scalars['String']['output']>;\n  color?: Maybe<Scalars['String']['output']>;\n  style?: Maybe<Scalars['String']['output']>;\n};\n\nexport type GlobalFooterSocial = {\n  __typename?: 'GlobalFooterSocial';\n  icon?: Maybe<GlobalFooterSocialIcon>;\n  url?: Maybe<Scalars['String']['output']>;\n};\n\nexport type GlobalFooter = {\n  __typename?: 'GlobalFooter';\n  social?: Maybe<Array<Maybe<GlobalFooterSocial>>>;\n};\n\nexport type GlobalTheme = {\n  __typename?: 'GlobalTheme';\n  color?: Maybe<Scalars['String']['output']>;\n  font?: Maybe<Scalars['String']['output']>;\n  darkMode?: Maybe<Scalars['String']['output']>;\n};\n\nexport type Global = Node & Document & {\n  __typename?: 'Global';\n  header?: Maybe<GlobalHeader>;\n  footer?: Maybe<GlobalFooter>;\n  theme?: Maybe<GlobalTheme>;\n  id: Scalars['ID']['output'];\n  _sys: SystemInfo;\n  _values: Scalars['JSON']['output'];\n};\n\nexport type GlobalHeaderIconFilter = {\n  name?: InputMaybe<StringFilter>;\n  color?: InputMaybe<StringFilter>;\n  style?: InputMaybe<StringFilter>;\n};\n\nexport type GlobalHeaderNavFilter = {\n  href?: InputMaybe<StringFilter>;\n  label?: InputMaybe<StringFilter>;\n};\n\nexport type GlobalHeaderFilter = {\n  icon?: InputMaybe<GlobalHeaderIconFilter>;\n  name?: InputMaybe<StringFilter>;\n  color?: InputMaybe<StringFilter>;\n  nav?: InputMaybe<GlobalHeaderNavFilter>;\n};\n\nexport type GlobalFooterSocialIconFilter = {\n  name?: InputMaybe<StringFilter>;\n  color?: InputMaybe<StringFilter>;\n  style?: InputMaybe<StringFilter>;\n};\n\nexport type GlobalFooterSocialFilter = {\n  icon?: InputMaybe<GlobalFooterSocialIconFilter>;\n  url?: InputMaybe<StringFilter>;\n};\n\nexport type GlobalFooterFilter = {\n  social?: InputMaybe<GlobalFooterSocialFilter>;\n};\n\nexport type GlobalThemeFilter = {\n  color?: InputMaybe<StringFilter>;\n  font?: InputMaybe<StringFilter>;\n  darkMode?: InputMaybe<StringFilter>;\n};\n\nexport type GlobalFilter = {\n  header?: InputMaybe<GlobalHeaderFilter>;\n  footer?: InputMaybe<GlobalFooterFilter>;\n  theme?: InputMaybe<GlobalThemeFilter>;\n};\n\nexport type GlobalConnectionEdges = {\n  __typename?: 'GlobalConnectionEdges';\n  cursor: Scalars['String']['output'];\n  node?: Maybe<Global>;\n};\n\nexport type GlobalConnection = Connection & {\n  __typename?: 'GlobalConnection';\n  pageInfo: PageInfo;\n  totalCount: Scalars['Float']['output'];\n  edges?: Maybe<Array<Maybe<GlobalConnectionEdges>>>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  addPendingDocument: DocumentNode;\n  updateDocument: DocumentNode;\n  deleteDocument: DocumentNode;\n  createDocument: DocumentNode;\n  createFolder: DocumentNode;\n  updatePage: Page;\n  createPage: Page;\n  updatePost: Post;\n  createPost: Post;\n  updateTutorial: Tutorial;\n  createTutorial: Tutorial;\n  updateAuthor: Author;\n  createAuthor: Author;\n  updateTag: Tag;\n  createTag: Tag;\n  updateGlobal: Global;\n  createGlobal: Global;\n};\n\n\nexport type MutationAddPendingDocumentArgs = {\n  collection: Scalars['String']['input'];\n  relativePath: Scalars['String']['input'];\n  template?: InputMaybe<Scalars['String']['input']>;\n};\n\n\nexport type MutationUpdateDocumentArgs = {\n  collection?: InputMaybe<Scalars['String']['input']>;\n  relativePath: Scalars['String']['input'];\n  params: DocumentUpdateMutation;\n};\n\n\nexport type MutationDeleteDocumentArgs = {\n  collection?: InputMaybe<Scalars['String']['input']>;\n  relativePath: Scalars['String']['input'];\n};\n\n\nexport type MutationCreateDocumentArgs = {\n  collection?: InputMaybe<Scalars['String']['input']>;\n  relativePath: Scalars['String']['input'];\n  params: DocumentMutation;\n};\n\n\nexport type MutationCreateFolderArgs = {\n  collection?: InputMaybe<Scalars['String']['input']>;\n  relativePath: Scalars['String']['input'];\n};\n\n\nexport type MutationUpdatePageArgs = {\n  relativePath: Scalars['String']['input'];\n  params: PageMutation;\n};\n\n\nexport type MutationCreatePageArgs = {\n  relativePath: Scalars['String']['input'];\n  params: PageMutation;\n};\n\n\nexport type MutationUpdatePostArgs = {\n  relativePath: Scalars['String']['input'];\n  params: PostMutation;\n};\n\n\nexport type MutationCreatePostArgs = {\n  relativePath: Scalars['String']['input'];\n  params: PostMutation;\n};\n\n\nexport type MutationUpdateTutorialArgs = {\n  relativePath: Scalars['String']['input'];\n  params: TutorialMutation;\n};\n\n\nexport type MutationCreateTutorialArgs = {\n  relativePath: Scalars['String']['input'];\n  params: TutorialMutation;\n};\n\n\nexport type MutationUpdateAuthorArgs = {\n  relativePath: Scalars['String']['input'];\n  params: AuthorMutation;\n};\n\n\nexport type MutationCreateAuthorArgs = {\n  relativePath: Scalars['String']['input'];\n  params: AuthorMutation;\n};\n\n\nexport type MutationUpdateTagArgs = {\n  relativePath: Scalars['String']['input'];\n  params: TagMutation;\n};\n\n\nexport type MutationCreateTagArgs = {\n  relativePath: Scalars['String']['input'];\n  params: TagMutation;\n};\n\n\nexport type MutationUpdateGlobalArgs = {\n  relativePath: Scalars['String']['input'];\n  params: GlobalMutation;\n};\n\n\nexport type MutationCreateGlobalArgs = {\n  relativePath: Scalars['String']['input'];\n  params: GlobalMutation;\n};\n\nexport type DocumentUpdateMutation = {\n  page?: InputMaybe<PageMutation>;\n  post?: InputMaybe<PostMutation>;\n  tutorial?: InputMaybe<TutorialMutation>;\n  author?: InputMaybe<AuthorMutation>;\n  tag?: InputMaybe<TagMutation>;\n  global?: InputMaybe<GlobalMutation>;\n  relativePath?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type DocumentMutation = {\n  page?: InputMaybe<PageMutation>;\n  post?: InputMaybe<PostMutation>;\n  tutorial?: InputMaybe<TutorialMutation>;\n  author?: InputMaybe<AuthorMutation>;\n  tag?: InputMaybe<TagMutation>;\n  global?: InputMaybe<GlobalMutation>;\n};\n\nexport type PageBlocksHeroActionsIconMutation = {\n  name?: InputMaybe<Scalars['String']['input']>;\n  color?: InputMaybe<Scalars['String']['input']>;\n  style?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type PageBlocksHeroActionsMutation = {\n  label?: InputMaybe<Scalars['String']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n  icon?: InputMaybe<PageBlocksHeroActionsIconMutation>;\n  link?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type PageBlocksHeroImageMutation = {\n  src?: InputMaybe<Scalars['String']['input']>;\n  alt?: InputMaybe<Scalars['String']['input']>;\n  videoUrl?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type PageBlocksHeroMutation = {\n  background?: InputMaybe<Scalars['String']['input']>;\n  headline?: InputMaybe<Scalars['String']['input']>;\n  tagline?: InputMaybe<Scalars['String']['input']>;\n  actions?: InputMaybe<Array<InputMaybe<PageBlocksHeroActionsMutation>>>;\n  image?: InputMaybe<PageBlocksHeroImageMutation>;\n};\n\nexport type PageBlocksCalloutMutation = {\n  background?: InputMaybe<Scalars['String']['input']>;\n  text?: InputMaybe<Scalars['String']['input']>;\n  url?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type PageBlocksFeaturesItemsIconMutation = {\n  name?: InputMaybe<Scalars['String']['input']>;\n  color?: InputMaybe<Scalars['String']['input']>;\n  style?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type PageBlocksFeaturesItemsMutation = {\n  icon?: InputMaybe<PageBlocksFeaturesItemsIconMutation>;\n  title?: InputMaybe<Scalars['String']['input']>;\n  text?: InputMaybe<Scalars['JSON']['input']>;\n};\n\nexport type PageBlocksFeaturesMutation = {\n  background?: InputMaybe<Scalars['String']['input']>;\n  title?: InputMaybe<Scalars['String']['input']>;\n  description?: InputMaybe<Scalars['String']['input']>;\n  items?: InputMaybe<Array<InputMaybe<PageBlocksFeaturesItemsMutation>>>;\n};\n\nexport type PageBlocksStatsStatsMutation = {\n  stat?: InputMaybe<Scalars['String']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type PageBlocksStatsMutation = {\n  background?: InputMaybe<Scalars['String']['input']>;\n  title?: InputMaybe<Scalars['String']['input']>;\n  description?: InputMaybe<Scalars['String']['input']>;\n  stats?: InputMaybe<Array<InputMaybe<PageBlocksStatsStatsMutation>>>;\n};\n\nexport type PageBlocksCtaActionsIconMutation = {\n  name?: InputMaybe<Scalars['String']['input']>;\n  color?: InputMaybe<Scalars['String']['input']>;\n  style?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type PageBlocksCtaActionsMutation = {\n  label?: InputMaybe<Scalars['String']['input']>;\n  type?: InputMaybe<Scalars['String']['input']>;\n  icon?: InputMaybe<PageBlocksCtaActionsIconMutation>;\n  link?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type PageBlocksCtaMutation = {\n  title?: InputMaybe<Scalars['String']['input']>;\n  description?: InputMaybe<Scalars['String']['input']>;\n  actions?: InputMaybe<Array<InputMaybe<PageBlocksCtaActionsMutation>>>;\n};\n\nexport type PageBlocksContentMutation = {\n  background?: InputMaybe<Scalars['String']['input']>;\n  body?: InputMaybe<Scalars['JSON']['input']>;\n};\n\nexport type PageBlocksTestimonialTestimonialsMutation = {\n  quote?: InputMaybe<Scalars['String']['input']>;\n  author?: InputMaybe<Scalars['String']['input']>;\n  role?: InputMaybe<Scalars['String']['input']>;\n  avatar?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type PageBlocksTestimonialMutation = {\n  background?: InputMaybe<Scalars['String']['input']>;\n  title?: InputMaybe<Scalars['String']['input']>;\n  description?: InputMaybe<Scalars['String']['input']>;\n  testimonials?: InputMaybe<Array<InputMaybe<PageBlocksTestimonialTestimonialsMutation>>>;\n};\n\nexport type PageBlocksVideoMutation = {\n  background?: InputMaybe<Scalars['String']['input']>;\n  color?: InputMaybe<Scalars['String']['input']>;\n  url?: InputMaybe<Scalars['String']['input']>;\n  autoPlay?: InputMaybe<Scalars['Boolean']['input']>;\n  loop?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\nexport type PageBlocksMutation = {\n  hero?: InputMaybe<PageBlocksHeroMutation>;\n  callout?: InputMaybe<PageBlocksCalloutMutation>;\n  features?: InputMaybe<PageBlocksFeaturesMutation>;\n  stats?: InputMaybe<PageBlocksStatsMutation>;\n  cta?: InputMaybe<PageBlocksCtaMutation>;\n  content?: InputMaybe<PageBlocksContentMutation>;\n  testimonial?: InputMaybe<PageBlocksTestimonialMutation>;\n  video?: InputMaybe<PageBlocksVideoMutation>;\n};\n\nexport type PageMutation = {\n  blocks?: InputMaybe<Array<InputMaybe<PageBlocksMutation>>>;\n};\n\nexport type PostTagsMutation = {\n  tag?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type PostMutation = {\n  title?: InputMaybe<Scalars['String']['input']>;\n  heroImg?: InputMaybe<Scalars['String']['input']>;\n  excerpt?: InputMaybe<Scalars['JSON']['input']>;\n  author?: InputMaybe<Scalars['String']['input']>;\n  date?: InputMaybe<Scalars['String']['input']>;\n  tags?: InputMaybe<Array<InputMaybe<PostTagsMutation>>>;\n  _body?: InputMaybe<Scalars['JSON']['input']>;\n};\n\nexport type TutorialMutation = {\n  title?: InputMaybe<Scalars['String']['input']>;\n  description?: InputMaybe<Scalars['String']['input']>;\n  category?: InputMaybe<Scalars['String']['input']>;\n  difficulty?: InputMaybe<Scalars['String']['input']>;\n  duration?: InputMaybe<Scalars['String']['input']>;\n  image?: InputMaybe<Scalars['String']['input']>;\n  date?: InputMaybe<Scalars['String']['input']>;\n  video_url?: InputMaybe<Scalars['String']['input']>;\n  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;\n  _body?: InputMaybe<Scalars['JSON']['input']>;\n};\n\nexport type AuthorMutation = {\n  name?: InputMaybe<Scalars['String']['input']>;\n  avatar?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type TagMutation = {\n  name?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type GlobalHeaderIconMutation = {\n  name?: InputMaybe<Scalars['String']['input']>;\n  color?: InputMaybe<Scalars['String']['input']>;\n  style?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type GlobalHeaderNavMutation = {\n  href?: InputMaybe<Scalars['String']['input']>;\n  label?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type GlobalHeaderMutation = {\n  icon?: InputMaybe<GlobalHeaderIconMutation>;\n  name?: InputMaybe<Scalars['String']['input']>;\n  color?: InputMaybe<Scalars['String']['input']>;\n  nav?: InputMaybe<Array<InputMaybe<GlobalHeaderNavMutation>>>;\n};\n\nexport type GlobalFooterSocialIconMutation = {\n  name?: InputMaybe<Scalars['String']['input']>;\n  color?: InputMaybe<Scalars['String']['input']>;\n  style?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type GlobalFooterSocialMutation = {\n  icon?: InputMaybe<GlobalFooterSocialIconMutation>;\n  url?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type GlobalFooterMutation = {\n  social?: InputMaybe<Array<InputMaybe<GlobalFooterSocialMutation>>>;\n};\n\nexport type GlobalThemeMutation = {\n  color?: InputMaybe<Scalars['String']['input']>;\n  font?: InputMaybe<Scalars['String']['input']>;\n  darkMode?: InputMaybe<Scalars['String']['input']>;\n};\n\nexport type GlobalMutation = {\n  header?: InputMaybe<GlobalHeaderMutation>;\n  footer?: InputMaybe<GlobalFooterMutation>;\n  theme?: InputMaybe<GlobalThemeMutation>;\n};\n\nexport type LayoutQueryFragmentFragment = { __typename?: 'Query', global: { __typename: 'Global', header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', name?: string | null, color?: string | null, style?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', social?: Array<{ __typename: 'GlobalFooterSocial', url?: string | null, icon?: { __typename: 'GlobalFooterSocialIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, darkMode?: string | null } | null } };\n\nexport type PageQueryQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type PageQueryQuery = { __typename?: 'Query', postConnection: { __typename?: 'PostConnection', edges?: Array<{ __typename?: 'PostConnectionEdges', node?: { __typename?: 'Post', id: string, date?: string | null, title: string, excerpt?: any | null, author?: { __typename: 'Author', name: string, avatar?: string | null } | null, _sys: { __typename?: 'SystemInfo', filename: string } } | null } | null> | null }, global: { __typename: 'Global', header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', name?: string | null, color?: string | null, style?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', social?: Array<{ __typename: 'GlobalFooterSocial', url?: string | null, icon?: { __typename: 'GlobalFooterSocialIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, darkMode?: string | null } | null } };\n\nexport type ContentQueryQueryVariables = Exact<{\n  relativePath: Scalars['String']['input'];\n}>;\n\n\nexport type ContentQueryQuery = { __typename?: 'Query', page: { __typename: 'Page', blocks?: Array<{ __typename: 'PageBlocksHero', background?: string | null, headline?: string | null, tagline?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, type?: string | null, link?: string | null, icon?: { __typename: 'PageBlocksHeroActionsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null, videoUrl?: string | null } | null } | { __typename: 'PageBlocksCallout', background?: string | null, text?: string | null, url?: string | null } | { __typename: 'PageBlocksFeatures', background?: string | null, title?: string | null, description?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, text?: any | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksStats', background?: string | null, title?: string | null, description?: string | null, stats?: Array<{ __typename: 'PageBlocksStatsStats', stat?: string | null, type?: string | null } | null> | null } | { __typename: 'PageBlocksCta', title?: string | null, description?: string | null, actions?: Array<{ __typename: 'PageBlocksCtaActions', label?: string | null, type?: string | null, link?: string | null, icon?: { __typename: 'PageBlocksCtaActionsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksContent', background?: string | null, body?: any | null } | { __typename: 'PageBlocksTestimonial', background?: string | null, title?: string | null, description?: string | null, testimonials?: Array<{ __typename: 'PageBlocksTestimonialTestimonials', quote?: string | null, author?: string | null, role?: string | null, avatar?: string | null } | null> | null } | { __typename: 'PageBlocksVideo', background?: string | null, color?: string | null, url?: string | null, autoPlay?: boolean | null, loop?: boolean | null } | null> | null }, global: { __typename: 'Global', header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', name?: string | null, color?: string | null, style?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', social?: Array<{ __typename: 'GlobalFooterSocial', url?: string | null, icon?: { __typename: 'GlobalFooterSocialIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, darkMode?: string | null } | null } };\n\nexport type BlogPostQueryQueryVariables = Exact<{\n  relativePath: Scalars['String']['input'];\n}>;\n\n\nexport type BlogPostQueryQuery = { __typename?: 'Query', post: { __typename: 'Post', title: string, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, author?: { __typename: 'Author', name: string, avatar?: string | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, tags?: Array<{ __typename: 'PostTags', tag?: { __typename: 'Tag', name: string, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null }, global: { __typename: 'Global', header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', name?: string | null, color?: string | null, style?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', social?: Array<{ __typename: 'GlobalFooterSocial', url?: string | null, icon?: { __typename: 'GlobalFooterSocialIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, darkMode?: string | null } | null } };\n\nexport type PagePartsFragment = { __typename: 'Page', blocks?: Array<{ __typename: 'PageBlocksHero', background?: string | null, headline?: string | null, tagline?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, type?: string | null, link?: string | null, icon?: { __typename: 'PageBlocksHeroActionsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null, videoUrl?: string | null } | null } | { __typename: 'PageBlocksCallout', background?: string | null, text?: string | null, url?: string | null } | { __typename: 'PageBlocksFeatures', background?: string | null, title?: string | null, description?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, text?: any | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksStats', background?: string | null, title?: string | null, description?: string | null, stats?: Array<{ __typename: 'PageBlocksStatsStats', stat?: string | null, type?: string | null } | null> | null } | { __typename: 'PageBlocksCta', title?: string | null, description?: string | null, actions?: Array<{ __typename: 'PageBlocksCtaActions', label?: string | null, type?: string | null, link?: string | null, icon?: { __typename: 'PageBlocksCtaActionsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksContent', background?: string | null, body?: any | null } | { __typename: 'PageBlocksTestimonial', background?: string | null, title?: string | null, description?: string | null, testimonials?: Array<{ __typename: 'PageBlocksTestimonialTestimonials', quote?: string | null, author?: string | null, role?: string | null, avatar?: string | null } | null> | null } | { __typename: 'PageBlocksVideo', background?: string | null, color?: string | null, url?: string | null, autoPlay?: boolean | null, loop?: boolean | null } | null> | null };\n\nexport type PostPartsFragment = { __typename: 'Post', title: string, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, author?: { __typename: 'Author', name: string, avatar?: string | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, tags?: Array<{ __typename: 'PostTags', tag?: { __typename: 'Tag', name: string, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null };\n\nexport type TutorialPartsFragment = { __typename: 'Tutorial', title: string, description?: string | null, category?: string | null, difficulty?: string | null, duration?: string | null, image?: string | null, date?: string | null, video_url?: string | null, tags?: Array<string | null> | null, _body?: any | null };\n\nexport type AuthorPartsFragment = { __typename: 'Author', name: string, avatar?: string | null };\n\nexport type TagPartsFragment = { __typename: 'Tag', name: string };\n\nexport type GlobalPartsFragment = { __typename: 'Global', header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', name?: string | null, color?: string | null, style?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', social?: Array<{ __typename: 'GlobalFooterSocial', url?: string | null, icon?: { __typename: 'GlobalFooterSocialIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, darkMode?: string | null } | null };\n\nexport type PageQueryVariables = Exact<{\n  relativePath: Scalars['String']['input'];\n}>;\n\n\nexport type PageQuery = { __typename?: 'Query', page: { __typename: 'Page', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksHero', background?: string | null, headline?: string | null, tagline?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, type?: string | null, link?: string | null, icon?: { __typename: 'PageBlocksHeroActionsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null, videoUrl?: string | null } | null } | { __typename: 'PageBlocksCallout', background?: string | null, text?: string | null, url?: string | null } | { __typename: 'PageBlocksFeatures', background?: string | null, title?: string | null, description?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, text?: any | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksStats', background?: string | null, title?: string | null, description?: string | null, stats?: Array<{ __typename: 'PageBlocksStatsStats', stat?: string | null, type?: string | null } | null> | null } | { __typename: 'PageBlocksCta', title?: string | null, description?: string | null, actions?: Array<{ __typename: 'PageBlocksCtaActions', label?: string | null, type?: string | null, link?: string | null, icon?: { __typename: 'PageBlocksCtaActionsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksContent', background?: string | null, body?: any | null } | { __typename: 'PageBlocksTestimonial', background?: string | null, title?: string | null, description?: string | null, testimonials?: Array<{ __typename: 'PageBlocksTestimonialTestimonials', quote?: string | null, author?: string | null, role?: string | null, avatar?: string | null } | null> | null } | { __typename: 'PageBlocksVideo', background?: string | null, color?: string | null, url?: string | null, autoPlay?: boolean | null, loop?: boolean | null } | null> | null } };\n\nexport type PageConnectionQueryVariables = Exact<{\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<PageFilter>;\n}>;\n\n\nexport type PageConnectionQuery = { __typename?: 'Query', pageConnection: { __typename?: 'PageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PageConnectionEdges', cursor: string, node?: { __typename: 'Page', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksHero', background?: string | null, headline?: string | null, tagline?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, type?: string | null, link?: string | null, icon?: { __typename: 'PageBlocksHeroActionsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null, videoUrl?: string | null } | null } | { __typename: 'PageBlocksCallout', background?: string | null, text?: string | null, url?: string | null } | { __typename: 'PageBlocksFeatures', background?: string | null, title?: string | null, description?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, text?: any | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksStats', background?: string | null, title?: string | null, description?: string | null, stats?: Array<{ __typename: 'PageBlocksStatsStats', stat?: string | null, type?: string | null } | null> | null } | { __typename: 'PageBlocksCta', title?: string | null, description?: string | null, actions?: Array<{ __typename: 'PageBlocksCtaActions', label?: string | null, type?: string | null, link?: string | null, icon?: { __typename: 'PageBlocksCtaActionsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksContent', background?: string | null, body?: any | null } | { __typename: 'PageBlocksTestimonial', background?: string | null, title?: string | null, description?: string | null, testimonials?: Array<{ __typename: 'PageBlocksTestimonialTestimonials', quote?: string | null, author?: string | null, role?: string | null, avatar?: string | null } | null> | null } | { __typename: 'PageBlocksVideo', background?: string | null, color?: string | null, url?: string | null, autoPlay?: boolean | null, loop?: boolean | null } | null> | null } | null } | null> | null } };\n\nexport type PostQueryVariables = Exact<{\n  relativePath: Scalars['String']['input'];\n}>;\n\n\nexport type PostQuery = { __typename?: 'Query', post: { __typename: 'Post', id: string, title: string, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, author?: { __typename: 'Author', name: string, avatar?: string | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, tags?: Array<{ __typename: 'PostTags', tag?: { __typename: 'Tag', name: string, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };\n\nexport type PostConnectionQueryVariables = Exact<{\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<PostFilter>;\n}>;\n\n\nexport type PostConnectionQuery = { __typename?: 'Query', postConnection: { __typename?: 'PostConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PostConnectionEdges', cursor: string, node?: { __typename: 'Post', id: string, title: string, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, author?: { __typename: 'Author', name: string, avatar?: string | null, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null, tags?: Array<{ __typename: 'PostTags', tag?: { __typename: 'Tag', name: string, id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } | null } | null> | null } };\n\nexport type TutorialQueryVariables = Exact<{\n  relativePath: Scalars['String']['input'];\n}>;\n\n\nexport type TutorialQuery = { __typename?: 'Query', tutorial: { __typename: 'Tutorial', id: string, title: string, description?: string | null, category?: string | null, difficulty?: string | null, duration?: string | null, image?: string | null, date?: string | null, video_url?: string | null, tags?: Array<string | null> | null, _body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };\n\nexport type TutorialConnectionQueryVariables = Exact<{\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<TutorialFilter>;\n}>;\n\n\nexport type TutorialConnectionQuery = { __typename?: 'Query', tutorialConnection: { __typename?: 'TutorialConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'TutorialConnectionEdges', cursor: string, node?: { __typename: 'Tutorial', id: string, title: string, description?: string | null, category?: string | null, difficulty?: string | null, duration?: string | null, image?: string | null, date?: string | null, video_url?: string | null, tags?: Array<string | null> | null, _body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };\n\nexport type AuthorQueryVariables = Exact<{\n  relativePath: Scalars['String']['input'];\n}>;\n\n\nexport type AuthorQuery = { __typename?: 'Query', author: { __typename: 'Author', id: string, name: string, avatar?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };\n\nexport type AuthorConnectionQueryVariables = Exact<{\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<AuthorFilter>;\n}>;\n\n\nexport type AuthorConnectionQuery = { __typename?: 'Query', authorConnection: { __typename?: 'AuthorConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'AuthorConnectionEdges', cursor: string, node?: { __typename: 'Author', id: string, name: string, avatar?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };\n\nexport type TagQueryVariables = Exact<{\n  relativePath: Scalars['String']['input'];\n}>;\n\n\nexport type TagQuery = { __typename?: 'Query', tag: { __typename: 'Tag', id: string, name: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };\n\nexport type TagConnectionQueryVariables = Exact<{\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<TagFilter>;\n}>;\n\n\nexport type TagConnectionQuery = { __typename?: 'Query', tagConnection: { __typename?: 'TagConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'TagConnectionEdges', cursor: string, node?: { __typename: 'Tag', id: string, name: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };\n\nexport type GlobalQueryVariables = Exact<{\n  relativePath: Scalars['String']['input'];\n}>;\n\n\nexport type GlobalQuery = { __typename?: 'Query', global: { __typename: 'Global', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', name?: string | null, color?: string | null, style?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', social?: Array<{ __typename: 'GlobalFooterSocial', url?: string | null, icon?: { __typename: 'GlobalFooterSocialIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, darkMode?: string | null } | null } };\n\nexport type GlobalConnectionQueryVariables = Exact<{\n  before?: InputMaybe<Scalars['String']['input']>;\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Float']['input']>;\n  last?: InputMaybe<Scalars['Float']['input']>;\n  sort?: InputMaybe<Scalars['String']['input']>;\n  filter?: InputMaybe<GlobalFilter>;\n}>;\n\n\nexport type GlobalConnectionQuery = { __typename?: 'Query', globalConnection: { __typename?: 'GlobalConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'GlobalConnectionEdges', cursor: string, node?: { __typename: 'Global', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', name?: string | null, color?: string | null, style?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', social?: Array<{ __typename: 'GlobalFooterSocial', url?: string | null, icon?: { __typename: 'GlobalFooterSocialIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, darkMode?: string | null } | null } | null } | null> | null } };\n\nexport const GlobalPartsFragmentDoc = gql`\n    fragment GlobalParts on Global {\n  __typename\n  header {\n    __typename\n    icon {\n      __typename\n      name\n      color\n      style\n    }\n    name\n    color\n    nav {\n      __typename\n      href\n      label\n    }\n  }\n  footer {\n    __typename\n    social {\n      __typename\n      icon {\n        __typename\n        name\n        color\n        style\n      }\n      url\n    }\n  }\n  theme {\n    __typename\n    color\n    font\n    darkMode\n  }\n}\n    `;\nexport const LayoutQueryFragmentFragmentDoc = gql`\n    fragment LayoutQueryFragment on Query {\n  global(relativePath: \"index.json\") {\n    ...GlobalParts\n  }\n}\n    ${GlobalPartsFragmentDoc}`;\nexport const PagePartsFragmentDoc = gql`\n    fragment PageParts on Page {\n  __typename\n  blocks {\n    __typename\n    ... on PageBlocksHero {\n      background\n      headline\n      tagline\n      actions {\n        __typename\n        label\n        type\n        icon {\n          __typename\n          name\n          color\n          style\n        }\n        link\n      }\n      image {\n        __typename\n        src\n        alt\n        videoUrl\n      }\n    }\n    ... on PageBlocksCallout {\n      background\n      text\n      url\n    }\n    ... on PageBlocksFeatures {\n      background\n      title\n      description\n      items {\n        __typename\n        icon {\n          __typename\n          name\n          color\n          style\n        }\n        title\n        text\n      }\n    }\n    ... on PageBlocksStats {\n      background\n      title\n      description\n      stats {\n        __typename\n        stat\n        type\n      }\n    }\n    ... on PageBlocksCta {\n      title\n      description\n      actions {\n        __typename\n        label\n        type\n        icon {\n          __typename\n          name\n          color\n          style\n        }\n        link\n      }\n    }\n    ... on PageBlocksContent {\n      background\n      body\n    }\n    ... on PageBlocksTestimonial {\n      background\n      title\n      description\n      testimonials {\n        __typename\n        quote\n        author\n        role\n        avatar\n      }\n    }\n    ... on PageBlocksVideo {\n      background\n      color\n      url\n      autoPlay\n      loop\n    }\n  }\n}\n    `;\nexport const PostPartsFragmentDoc = gql`\n    fragment PostParts on Post {\n  __typename\n  title\n  heroImg\n  excerpt\n  author {\n    ... on Author {\n      __typename\n      name\n      avatar\n    }\n    ... on Document {\n      _sys {\n        filename\n        basename\n        hasReferences\n        breadcrumbs\n        path\n        relativePath\n        extension\n      }\n      id\n    }\n  }\n  date\n  tags {\n    __typename\n    tag {\n      ... on Tag {\n        __typename\n        name\n      }\n      ... on Document {\n        _sys {\n          filename\n          basename\n          hasReferences\n          breadcrumbs\n          path\n          relativePath\n          extension\n        }\n        id\n      }\n    }\n  }\n  _body\n}\n    `;\nexport const TutorialPartsFragmentDoc = gql`\n    fragment TutorialParts on Tutorial {\n  __typename\n  title\n  description\n  category\n  difficulty\n  duration\n  image\n  date\n  video_url\n  tags\n  _body\n}\n    `;\nexport const AuthorPartsFragmentDoc = gql`\n    fragment AuthorParts on Author {\n  __typename\n  name\n  avatar\n}\n    `;\nexport const TagPartsFragmentDoc = gql`\n    fragment TagParts on Tag {\n  __typename\n  name\n}\n    `;\nexport const PageQueryDocument = gql`\n    query pageQuery {\n  ...LayoutQueryFragment\n  postConnection {\n    edges {\n      node {\n        id\n        date\n        title\n        excerpt\n        author {\n          ... on Author {\n            ...AuthorParts\n          }\n        }\n        _sys {\n          filename\n        }\n      }\n    }\n  }\n}\n    ${LayoutQueryFragmentFragmentDoc}\n${AuthorPartsFragmentDoc}`;\nexport const ContentQueryDocument = gql`\n    query contentQuery($relativePath: String!) {\n  ...LayoutQueryFragment\n  page(relativePath: $relativePath) {\n    ...PageParts\n  }\n}\n    ${LayoutQueryFragmentFragmentDoc}\n${PagePartsFragmentDoc}`;\nexport const BlogPostQueryDocument = gql`\n    query blogPostQuery($relativePath: String!) {\n  ...LayoutQueryFragment\n  post(relativePath: $relativePath) {\n    ...PostParts\n    author {\n      ... on Author {\n        name\n        avatar\n      }\n    }\n  }\n}\n    ${LayoutQueryFragmentFragmentDoc}\n${PostPartsFragmentDoc}`;\nexport const PageDocument = gql`\n    query page($relativePath: String!) {\n  page(relativePath: $relativePath) {\n    ... on Document {\n      _sys {\n        filename\n        basename\n        hasReferences\n        breadcrumbs\n        path\n        relativePath\n        extension\n      }\n      id\n    }\n    ...PageParts\n  }\n}\n    ${PagePartsFragmentDoc}`;\nexport const PageConnectionDocument = gql`\n    query pageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PageFilter) {\n  pageConnection(\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    sort: $sort\n    filter: $filter\n  ) {\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    totalCount\n    edges {\n      cursor\n      node {\n        ... on Document {\n          _sys {\n            filename\n            basename\n            hasReferences\n            breadcrumbs\n            path\n            relativePath\n            extension\n          }\n          id\n        }\n        ...PageParts\n      }\n    }\n  }\n}\n    ${PagePartsFragmentDoc}`;\nexport const PostDocument = gql`\n    query post($relativePath: String!) {\n  post(relativePath: $relativePath) {\n    ... on Document {\n      _sys {\n        filename\n        basename\n        hasReferences\n        breadcrumbs\n        path\n        relativePath\n        extension\n      }\n      id\n    }\n    ...PostParts\n  }\n}\n    ${PostPartsFragmentDoc}`;\nexport const PostConnectionDocument = gql`\n    query postConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PostFilter) {\n  postConnection(\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    sort: $sort\n    filter: $filter\n  ) {\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    totalCount\n    edges {\n      cursor\n      node {\n        ... on Document {\n          _sys {\n            filename\n            basename\n            hasReferences\n            breadcrumbs\n            path\n            relativePath\n            extension\n          }\n          id\n        }\n        ...PostParts\n      }\n    }\n  }\n}\n    ${PostPartsFragmentDoc}`;\nexport const TutorialDocument = gql`\n    query tutorial($relativePath: String!) {\n  tutorial(relativePath: $relativePath) {\n    ... on Document {\n      _sys {\n        filename\n        basename\n        hasReferences\n        breadcrumbs\n        path\n        relativePath\n        extension\n      }\n      id\n    }\n    ...TutorialParts\n  }\n}\n    ${TutorialPartsFragmentDoc}`;\nexport const TutorialConnectionDocument = gql`\n    query tutorialConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: TutorialFilter) {\n  tutorialConnection(\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    sort: $sort\n    filter: $filter\n  ) {\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    totalCount\n    edges {\n      cursor\n      node {\n        ... on Document {\n          _sys {\n            filename\n            basename\n            hasReferences\n            breadcrumbs\n            path\n            relativePath\n            extension\n          }\n          id\n        }\n        ...TutorialParts\n      }\n    }\n  }\n}\n    ${TutorialPartsFragmentDoc}`;\nexport const AuthorDocument = gql`\n    query author($relativePath: String!) {\n  author(relativePath: $relativePath) {\n    ... on Document {\n      _sys {\n        filename\n        basename\n        hasReferences\n        breadcrumbs\n        path\n        relativePath\n        extension\n      }\n      id\n    }\n    ...AuthorParts\n  }\n}\n    ${AuthorPartsFragmentDoc}`;\nexport const AuthorConnectionDocument = gql`\n    query authorConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: AuthorFilter) {\n  authorConnection(\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    sort: $sort\n    filter: $filter\n  ) {\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    totalCount\n    edges {\n      cursor\n      node {\n        ... on Document {\n          _sys {\n            filename\n            basename\n            hasReferences\n            breadcrumbs\n            path\n            relativePath\n            extension\n          }\n          id\n        }\n        ...AuthorParts\n      }\n    }\n  }\n}\n    ${AuthorPartsFragmentDoc}`;\nexport const TagDocument = gql`\n    query tag($relativePath: String!) {\n  tag(relativePath: $relativePath) {\n    ... on Document {\n      _sys {\n        filename\n        basename\n        hasReferences\n        breadcrumbs\n        path\n        relativePath\n        extension\n      }\n      id\n    }\n    ...TagParts\n  }\n}\n    ${TagPartsFragmentDoc}`;\nexport const TagConnectionDocument = gql`\n    query tagConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: TagFilter) {\n  tagConnection(\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    sort: $sort\n    filter: $filter\n  ) {\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    totalCount\n    edges {\n      cursor\n      node {\n        ... on Document {\n          _sys {\n            filename\n            basename\n            hasReferences\n            breadcrumbs\n            path\n            relativePath\n            extension\n          }\n          id\n        }\n        ...TagParts\n      }\n    }\n  }\n}\n    ${TagPartsFragmentDoc}`;\nexport const GlobalDocument = gql`\n    query global($relativePath: String!) {\n  global(relativePath: $relativePath) {\n    ... on Document {\n      _sys {\n        filename\n        basename\n        hasReferences\n        breadcrumbs\n        path\n        relativePath\n        extension\n      }\n      id\n    }\n    ...GlobalParts\n  }\n}\n    ${GlobalPartsFragmentDoc}`;\nexport const GlobalConnectionDocument = gql`\n    query globalConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: GlobalFilter) {\n  globalConnection(\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    sort: $sort\n    filter: $filter\n  ) {\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    totalCount\n    edges {\n      cursor\n      node {\n        ... on Document {\n          _sys {\n            filename\n            basename\n            hasReferences\n            breadcrumbs\n            path\n            relativePath\n            extension\n          }\n          id\n        }\n        ...GlobalParts\n      }\n    }\n  }\n}\n    ${GlobalPartsFragmentDoc}`;\nexport type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>\n  export function getSdk<C>(requester: Requester<C>) {\n    return {\n      pageQuery(variables?: PageQueryQueryVariables, options?: C): Promise<{data: PageQueryQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageQueryQueryVariables, query: string}> {\n        return requester<{data: PageQueryQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageQueryQueryVariables, query: string}, PageQueryQueryVariables>(PageQueryDocument, variables, options);\n      },\n    contentQuery(variables: ContentQueryQueryVariables, options?: C): Promise<{data: ContentQueryQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ContentQueryQueryVariables, query: string}> {\n        return requester<{data: ContentQueryQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ContentQueryQueryVariables, query: string}, ContentQueryQueryVariables>(ContentQueryDocument, variables, options);\n      },\n    blogPostQuery(variables: BlogPostQueryQueryVariables, options?: C): Promise<{data: BlogPostQueryQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: BlogPostQueryQueryVariables, query: string}> {\n        return requester<{data: BlogPostQueryQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: BlogPostQueryQueryVariables, query: string}, BlogPostQueryQueryVariables>(BlogPostQueryDocument, variables, options);\n      },\n    page(variables: PageQueryVariables, options?: C): Promise<{data: PageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageQueryVariables, query: string}> {\n        return requester<{data: PageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageQueryVariables, query: string}, PageQueryVariables>(PageDocument, variables, options);\n      },\n    pageConnection(variables?: PageConnectionQueryVariables, options?: C): Promise<{data: PageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageConnectionQueryVariables, query: string}> {\n        return requester<{data: PageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageConnectionQueryVariables, query: string}, PageConnectionQueryVariables>(PageConnectionDocument, variables, options);\n      },\n    post(variables: PostQueryVariables, options?: C): Promise<{data: PostQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PostQueryVariables, query: string}> {\n        return requester<{data: PostQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PostQueryVariables, query: string}, PostQueryVariables>(PostDocument, variables, options);\n      },\n    postConnection(variables?: PostConnectionQueryVariables, options?: C): Promise<{data: PostConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PostConnectionQueryVariables, query: string}> {\n        return requester<{data: PostConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PostConnectionQueryVariables, query: string}, PostConnectionQueryVariables>(PostConnectionDocument, variables, options);\n      },\n    tutorial(variables: TutorialQueryVariables, options?: C): Promise<{data: TutorialQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TutorialQueryVariables, query: string}> {\n        return requester<{data: TutorialQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TutorialQueryVariables, query: string}, TutorialQueryVariables>(TutorialDocument, variables, options);\n      },\n    tutorialConnection(variables?: TutorialConnectionQueryVariables, options?: C): Promise<{data: TutorialConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TutorialConnectionQueryVariables, query: string}> {\n        return requester<{data: TutorialConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TutorialConnectionQueryVariables, query: string}, TutorialConnectionQueryVariables>(TutorialConnectionDocument, variables, options);\n      },\n    author(variables: AuthorQueryVariables, options?: C): Promise<{data: AuthorQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: AuthorQueryVariables, query: string}> {\n        return requester<{data: AuthorQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: AuthorQueryVariables, query: string}, AuthorQueryVariables>(AuthorDocument, variables, options);\n      },\n    authorConnection(variables?: AuthorConnectionQueryVariables, options?: C): Promise<{data: AuthorConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: AuthorConnectionQueryVariables, query: string}> {\n        return requester<{data: AuthorConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: AuthorConnectionQueryVariables, query: string}, AuthorConnectionQueryVariables>(AuthorConnectionDocument, variables, options);\n      },\n    tag(variables: TagQueryVariables, options?: C): Promise<{data: TagQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TagQueryVariables, query: string}> {\n        return requester<{data: TagQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TagQueryVariables, query: string}, TagQueryVariables>(TagDocument, variables, options);\n      },\n    tagConnection(variables?: TagConnectionQueryVariables, options?: C): Promise<{data: TagConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TagConnectionQueryVariables, query: string}> {\n        return requester<{data: TagConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TagConnectionQueryVariables, query: string}, TagConnectionQueryVariables>(TagConnectionDocument, variables, options);\n      },\n    global(variables: GlobalQueryVariables, options?: C): Promise<{data: GlobalQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GlobalQueryVariables, query: string}> {\n        return requester<{data: GlobalQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GlobalQueryVariables, query: string}, GlobalQueryVariables>(GlobalDocument, variables, options);\n      },\n    globalConnection(variables?: GlobalConnectionQueryVariables, options?: C): Promise<{data: GlobalConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GlobalConnectionQueryVariables, query: string}> {\n        return requester<{data: GlobalConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GlobalConnectionQueryVariables, query: string}, GlobalConnectionQueryVariables>(GlobalConnectionDocument, variables, options);\n      }\n    };\n  }\n  export type Sdk = ReturnType<typeof getSdk>;\n\n// TinaSDK generated code\nimport { createClient, TinaClient } from \"tinacms/dist/client\";\n\nconst generateRequester = (\n  client: TinaClient,\n) => {\n  const requester: (\n    doc: any,\n    vars?: any,\n    options?: {\n      branch?: string,\n      /**\n       * Aside from `method` and `body`, all fetch options are passed\n       * through to underlying fetch request\n       */\n      fetchOptions?: Omit<Parameters<typeof fetch>[1], 'body' | 'method'>,\n    },\n    client\n  ) => Promise<any> = async (doc, vars, options) => {\n    let url = client.apiUrl\n    if (options?.branch) {\n      const index = client.apiUrl.lastIndexOf('/')\n      url = client.apiUrl.substring(0, index + 1) + options.branch\n    }\n    const data = await client.request({\n      query: doc,\n      variables: vars,\n      url,\n    }, options)\n\n    return { data: data?.data, errors: data?.errors, query: doc, variables: vars || {} }\n  }\n\n  return requester\n}\n\n/**\n * @experimental this class can be used but may change in the future\n **/\nexport const ExperimentalGetTinaClient = () =>\n  getSdk(\n    generateRequester(\n      createClient({\n        url: \"http://localhost:4001/graphql\",\n        queries,\n      })\n    )\n  )\n\nexport const queries = (\n  client: TinaClient,\n) => {\n  const requester = generateRequester(client)\n  return getSdk(requester)\n}\n\n  "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///Users/lunaaziz/tutorial-page/ktutorial/tina/__generated__/client.ts"],"sourcesContent":["import { createClient } from \"tinacms/dist/client\";\nimport { queries } from \"./types\";\nexport const client = createClient({ url: 'http://localhost:4001/graphql', token: 'undefined', queries,  });\nexport default client;\n  "],"names":[],"mappings":";;;;AAAA;AACA;;;AACO,MAAM,SAAS,CAAA,GAAA,0IAAA,CAAA,eAAY,AAAD,EAAE;IAAE,KAAK;IAAiC,OAAO;IAAa,SAAA,kIAAA,CAAA,UAAO;AAAG;uCAC1F","debugId":null}},
    {"offset": {"line": 784, "column": 0}, "map": {"version":3,"sources":["file:///Users/lunaaziz/tutorial-page/ktutorial/app/page.tsx"],"sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport client from \"@/tina/__generated__/client\";\n\nexport const revalidate = 300;\n\nexport default async function Home() {\n  // Get recent tutorials\n  const { data } = await client.queries.tutorialConnection({ first: 6 });\n  const tutorials = data.tutorialConnection.edges || [];\n\n  const categories = [\n    { name: \"Basics\", description: \"Learn the basics of Keyword Tool\", icon: \"🔍\" },\n    { name: \"Find Keywords\", description: \"Get advance insights\", icon: \"🎯\" },\n    { name: \"Check Search Volume\", description: \"Get search volume data for 700 keywords\", icon: \"📊\" },\n    { name: \"Keyword Basket\", description: \"Organize your keywords\", icon: \"🗂️\" },\n    { name: \"My Account\", description: \"Managing your Account settings\", icon: \"👤\" },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-red-500 text-white py-16\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h1 className=\"text-5xl font-bold mb-4\">Keyword Tool Tutorials</h1>\n          <p className=\"text-xl mb-8 opacity-90\">\n            Your comprehensive guide to mastering keyword research\n          </p>\n          <Link\n            href=\"/tutorials\"\n            className=\"inline-block bg-white text-red-500 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition\"\n          >\n            Browse All Tutorials\n          </Link>\n        </div>\n      </header>\n\n      {/* Stats */}\n      <section className=\"py-12 bg-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 text-center\">\n            <div>\n              <div className=\"text-3xl font-bold text-red-500 mb-2\">\n                {tutorials.length}+\n              </div>\n              <div className=\"text-gray-600\">Tutorials Available</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold text-red-500 mb-2\">5</div>\n              <div className=\"text-gray-600\">Categories Covered</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold text-red-500 mb-2\">∞</div>\n              <div className=\"text-gray-600\">Keywords to Discover</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Categories */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-3xl font-bold text-center mb-12\">\n            Jump right in\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {categories.map((category) => (\n              <Link\n                key={category.name}\n                href={`/tutorials?category=${encodeURIComponent(category.name)}`}\n                className=\"bg-white border rounded-lg p-6 hover:shadow-lg transition cursor-pointer\"\n              >\n                <div className=\"text-3xl mb-4\">{category.icon}</div>\n                <h3 className=\"text-lg font-semibold mb-2\">{category.name}</h3>\n                <p className=\"text-gray-500 text-sm\">{category.description}</p>\n              </Link>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Recent Tutorials */}\n      {tutorials.length > 0 && (\n        <section className=\"py-16 bg-white\">\n          <div className=\"container mx-auto px-4\">\n            <h2 className=\"text-3xl font-bold text-center mb-12\">\n              Latest Tutorials\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {tutorials.slice(0, 3).map((tutorial) => {\n                if (!tutorial?.node) return null;\n                return (\n                  <Link\n                    key={tutorial.node._sys.filename}\n                    href={`/tutorials/${tutorial.node._sys.filename}`}\n                    className=\"bg-gray-50 rounded-lg p-6 hover:shadow-lg transition\"\n                  >\n                    <div className=\"flex items-center gap-2 mb-3\">\n                      <span className=\"px-2 py-1 bg-red-100 text-red-800 rounded text-xs\">\n                        {tutorial.node.category}\n                      </span>\n                      <span className=\"px-2 py-1 bg-blue-100 text-blue-800 rounded text-xs\">\n                        {tutorial.node.difficulty}\n                      </span>\n                    </div>\n                    <h3 className=\"text-lg font-semibold mb-2\">\n                      {tutorial.node.title}\n                    </h3>\n                    <p className=\"text-gray-600 text-sm line-clamp-2\">\n                      {tutorial.node.description}\n                    </p>\n                  </Link>\n                );\n              })}\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* CTA */}\n      <section className=\"py-16 bg-red-500 text-white\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-3xl font-bold mb-4\">Ready to Start Learning?</h2>\n          <p className=\"text-xl mb-8 opacity-90\">\n            Explore our comprehensive tutorial library and become a keyword research expert\n          </p>\n          <div className=\"flex justify-center gap-4\">\n            <Link\n              href=\"/tutorials\"\n              className=\"bg-white text-red-500 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition\"\n            >\n              Browse Tutorials\n            </Link>\n            <Link\n              href=\"/admin\"\n              className=\"bg-transparent border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-red-500 transition\"\n            >\n              Manage Content\n            </Link>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1209, "column": 0}, "map": {"version":3,"sources":["file:///Users/lunaaziz/tutorial-page/ktutorial/node_modules/async-lock/lib/index.js"],"sourcesContent":["'use strict';\n\nvar AsyncLock = function (opts) {\n\topts = opts || {};\n\n\tthis.Promise = opts.Promise || Promise;\n\n\t// format: {key : [fn, fn]}\n\t// queues[key] = null indicates no job running for key\n\tthis.queues = Object.create(null);\n\n\t// lock is reentrant for same domain\n\tthis.domainReentrant = opts.domainReentrant || false;\n\tif (this.domainReentrant) {\n\t\tif (typeof process === 'undefined' || typeof process.domain === 'undefined') {\n\t\t\tthrow new Error(\n\t\t\t\t'Domain-reentrant locks require `process.domain` to exist. Please flip `opts.domainReentrant = false`, ' +\n\t\t\t\t'use a NodeJS version that still implements Domain, or install a browser polyfill.');\n\t\t}\n\t\t// domain of current running func {key : fn}\n\t\tthis.domains = Object.create(null);\n\t}\n\n\tthis.timeout = opts.timeout || AsyncLock.DEFAULT_TIMEOUT;\n\tthis.maxOccupationTime = opts.maxOccupationTime || AsyncLock.DEFAULT_MAX_OCCUPATION_TIME;\n\tthis.maxExecutionTime = opts.maxExecutionTime || AsyncLock.DEFAULT_MAX_EXECUTION_TIME;\n\tif (opts.maxPending === Infinity || (Number.isInteger(opts.maxPending) && opts.maxPending >= 0)) {\n\t\tthis.maxPending = opts.maxPending;\n\t} else {\n\t\tthis.maxPending = AsyncLock.DEFAULT_MAX_PENDING;\n\t}\n};\n\nAsyncLock.DEFAULT_TIMEOUT = 0; //Never\nAsyncLock.DEFAULT_MAX_OCCUPATION_TIME = 0; //Never\nAsyncLock.DEFAULT_MAX_EXECUTION_TIME = 0; //Never\nAsyncLock.DEFAULT_MAX_PENDING = 1000;\n\n/**\n * Acquire Locks\n *\n * @param {String|Array} key \tresource key or keys to lock\n * @param {function} fn \tasync function\n * @param {function} cb \tcallback function, otherwise will return a promise\n * @param {Object} opts \toptions\n */\nAsyncLock.prototype.acquire = function (key, fn, cb, opts) {\n\tif (Array.isArray(key)) {\n\t\treturn this._acquireBatch(key, fn, cb, opts);\n\t}\n\n\tif (typeof (fn) !== 'function') {\n\t\tthrow new Error('You must pass a function to execute');\n\t}\n\n\t// faux-deferred promise using new Promise() (as Promise.defer is deprecated)\n\tvar deferredResolve = null;\n\tvar deferredReject = null;\n\tvar deferred = null;\n\n\tif (typeof (cb) !== 'function') {\n\t\topts = cb;\n\t\tcb = null;\n\n\t\t// will return a promise\n\t\tdeferred = new this.Promise(function(resolve, reject) {\n\t\t\tdeferredResolve = resolve;\n\t\t\tdeferredReject = reject;\n\t\t});\n\t}\n\n\topts = opts || {};\n\n\tvar resolved = false;\n\tvar timer = null;\n\tvar occupationTimer = null;\n\tvar executionTimer = null;\n\tvar self = this;\n\n\tvar done = function (locked, err, ret) {\n\n\t\tif (occupationTimer) {\n\t\t\tclearTimeout(occupationTimer);\n\t\t\toccupationTimer = null;\n\t\t}\n\n\t\tif (executionTimer) {\n\t\t\tclearTimeout(executionTimer);\n\t\t\texecutionTimer = null;\n\t\t}\n\n\t\tif (locked) {\n\t\t\tif (!!self.queues[key] && self.queues[key].length === 0) {\n\t\t\t\tdelete self.queues[key];\n\t\t\t}\n\t\t\tif (self.domainReentrant) {\n\t\t\t\tdelete self.domains[key];\n\t\t\t}\n\t\t}\n\n\t\tif (!resolved) {\n\t\t\tif (!deferred) {\n\t\t\t\tif (typeof (cb) === 'function') {\n\t\t\t\t\tcb(err, ret);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//promise mode\n\t\t\t\tif (err) {\n\t\t\t\t\tdeferredReject(err);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdeferredResolve(ret);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolved = true;\n\t\t}\n\n\t\tif (locked) {\n\t\t\t//run next func\n\t\t\tif (!!self.queues[key] && self.queues[key].length > 0) {\n\t\t\t\tself.queues[key].shift()();\n\t\t\t}\n\t\t}\n\t};\n\n\tvar exec = function (locked) {\n\t\tif (resolved) { // may due to timed out\n\t\t\treturn done(locked);\n\t\t}\n\n\t\tif (timer) {\n\t\t\tclearTimeout(timer);\n\t\t\ttimer = null;\n\t\t}\n\n\t\tif (self.domainReentrant && locked) {\n\t\t\tself.domains[key] = process.domain;\n\t\t}\n\n\t\tvar maxExecutionTime = opts.maxExecutionTime || self.maxExecutionTime;\n\t\tif (maxExecutionTime) {\n\t\t\texecutionTimer = setTimeout(function () {\n\t\t\t\tif (!!self.queues[key]) {\n\t\t\t\t\tdone(locked, new Error('Maximum execution time is exceeded ' + key));\n\t\t\t\t}\n\t\t\t}, maxExecutionTime);\n\t\t}\n\n\t\t// Callback mode\n\t\tif (fn.length === 1) {\n\t\t\tvar called = false;\n\t\t\ttry {\n\t\t\t\tfn(function (err, ret) {\n\t\t\t\t\tif (!called) {\n\t\t\t\t\t\tcalled = true;\n\t\t\t\t\t\tdone(locked, err, ret);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\t// catching error thrown in user function fn\n\t\t\t\tif (!called) {\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tdone(locked, err);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Promise mode\n\t\t\tself._promiseTry(function () {\n\t\t\t\treturn fn();\n\t\t\t})\n\t\t\t.then(function(ret){\n\t\t\t\tdone(locked, undefined, ret);\n\t\t\t}, function(error){\n\t\t\t\tdone(locked, error);\n\t\t\t});\n\t\t}\n\t};\n\n\tif (self.domainReentrant && !!process.domain) {\n\t\texec = process.domain.bind(exec);\n\t}\n\n\tvar maxPending = opts.maxPending || self.maxPending;\n\n\tif (!self.queues[key]) {\n\t\tself.queues[key] = [];\n\t\texec(true);\n\t}\n\telse if (self.domainReentrant && !!process.domain && process.domain === self.domains[key]) {\n\t\t// If code is in the same domain of current running task, run it directly\n\t\t// Since lock is re-enterable\n\t\texec(false);\n\t}\n\telse if (self.queues[key].length >= maxPending) {\n\t\tdone(false, new Error('Too many pending tasks in queue ' + key));\n\t}\n\telse {\n\t\tvar taskFn = function () {\n\t\t\texec(true);\n\t\t};\n\t\tif (opts.skipQueue) {\n\t\t\tself.queues[key].unshift(taskFn);\n\t\t} else {\n\t\t\tself.queues[key].push(taskFn);\n\t\t}\n\n\t\tvar timeout = opts.timeout || self.timeout;\n\t\tif (timeout) {\n\t\t\ttimer = setTimeout(function () {\n\t\t\t\ttimer = null;\n\t\t\t\tdone(false, new Error('async-lock timed out in queue ' + key));\n\t\t\t}, timeout);\n\t\t}\n\t}\n\n\tvar maxOccupationTime = opts.maxOccupationTime || self.maxOccupationTime;\n\t\tif (maxOccupationTime) {\n\t\t\toccupationTimer = setTimeout(function () {\n\t\t\t\tif (!!self.queues[key]) {\n\t\t\t\t\tdone(false, new Error('Maximum occupation time is exceeded in queue ' + key));\n\t\t\t\t}\n\t\t\t}, maxOccupationTime);\n\t\t}\n\n\tif (deferred) {\n\t\treturn deferred;\n\t}\n};\n\n/*\n * Below is how this function works:\n *\n * Equivalent code:\n * self.acquire(key1, function(cb){\n *     self.acquire(key2, function(cb){\n *         self.acquire(key3, fn, cb);\n *     }, cb);\n * }, cb);\n *\n * Equivalent code:\n * var fn3 = getFn(key3, fn);\n * var fn2 = getFn(key2, fn3);\n * var fn1 = getFn(key1, fn2);\n * fn1(cb);\n */\nAsyncLock.prototype._acquireBatch = function (keys, fn, cb, opts) {\n\tif (typeof (cb) !== 'function') {\n\t\topts = cb;\n\t\tcb = null;\n\t}\n\n\tvar self = this;\n\tvar getFn = function (key, fn) {\n\t\treturn function (cb) {\n\t\t\tself.acquire(key, fn, cb, opts);\n\t\t};\n\t};\n\n\tvar fnx = keys.reduceRight(function (prev, key) {\n\t\treturn getFn(key, prev);\n\t}, fn);\n\n\tif (typeof (cb) === 'function') {\n\t\tfnx(cb);\n\t}\n\telse {\n\t\treturn new this.Promise(function (resolve, reject) {\n\t\t\t// check for promise mode in case keys is empty array\n\t\t\tif (fnx.length === 1) {\n\t\t\t\tfnx(function (err, ret) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresolve(ret);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve(fnx());\n\t\t\t}\n\t\t});\n\t}\n};\n\n/*\n *\tWhether there is any running or pending asyncFunc\n *\n *\t@param {String} key\n */\nAsyncLock.prototype.isBusy = function (key) {\n\tif (!key) {\n\t\treturn Object.keys(this.queues).length > 0;\n\t}\n\telse {\n\t\treturn !!this.queues[key];\n\t}\n};\n\n/**\n * Promise.try() implementation to become independent of Q-specific methods\n */\nAsyncLock.prototype._promiseTry = function(fn) {\n\ttry {\n\t\treturn this.Promise.resolve(fn());\n\t} catch (e) {\n\t\treturn this.Promise.reject(e);\n\t}\n};\n\nmodule.exports = AsyncLock;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1473, "column": 0}, "map": {"version":3,"sources":["file:///Users/lunaaziz/tutorial-page/ktutorial/node_modules/async-lock/index.js"],"sourcesContent":["'use strict';\nmodule.exports = require('./lib');\n"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1481, "column": 0}, "map": {"version":3,"sources":["file:///Users/lunaaziz/tutorial-page/ktutorial/node_modules/tinacms/dist/client.mjs"],"sourcesContent":["import AsyncLock from \"async-lock\";\nconst TINA_HOST = \"content.tinajs.io\";\nfunction replaceGithubPathSplit(url, replacement) {\n  const parts = url.split(\"github/\");\n  if (parts.length > 1 && replacement) {\n    return parts[0] + \"github/\" + replacement;\n  } else {\n    return url;\n  }\n}\nclass TinaClient {\n  constructor({\n    token,\n    url,\n    queries,\n    errorPolicy,\n    cacheDir\n  }) {\n    this.initialized = false;\n    this.apiUrl = url;\n    this.readonlyToken = token == null ? void 0 : token.trim();\n    this.queries = queries(this);\n    this.errorPolicy = errorPolicy || \"throw\";\n    this.cacheDir = cacheDir || \"\";\n  }\n  async init() {\n    if (this.initialized) {\n      return;\n    }\n    try {\n      if (this.cacheDir && typeof window === \"undefined\" && typeof require !== \"undefined\") {\n        const { NodeCache } = await import(\"./node-cache-5e8db9f0.mjs\");\n        this.cache = await NodeCache(this.cacheDir);\n        this.cacheLock = new AsyncLock();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    this.initialized = true;\n  }\n  async request({ errorPolicy, ...args }, options) {\n    var _a;\n    await this.init();\n    const errorPolicyDefined = errorPolicy || this.errorPolicy;\n    const headers = new Headers();\n    if (this.readonlyToken) {\n      headers.append(\"X-API-KEY\", this.readonlyToken);\n    }\n    headers.append(\"Content-Type\", \"application/json\");\n    if (options == null ? void 0 : options.fetchOptions) {\n      if ((_a = options == null ? void 0 : options.fetchOptions) == null ? void 0 : _a.headers) {\n        Object.entries(options.fetchOptions.headers).forEach(([key2, value]) => {\n          headers.append(key2, value);\n        });\n      }\n    }\n    const { headers: _, ...providedFetchOptions } = (options == null ? void 0 : options.fetchOptions) || {};\n    const bodyString = JSON.stringify({\n      query: args.query,\n      variables: (args == null ? void 0 : args.variables) || {}\n    });\n    const optionsObject = {\n      method: \"POST\",\n      headers,\n      body: bodyString,\n      redirect: \"follow\",\n      ...providedFetchOptions\n    };\n    const draftBranch = headers.get(\"x-branch\");\n    const url = replaceGithubPathSplit((args == null ? void 0 : args.url) || this.apiUrl, draftBranch);\n    let key = \"\";\n    let result;\n    if (this.cache) {\n      key = this.cache.makeKey(bodyString);\n      await this.cacheLock.acquire(key, async () => {\n        result = await this.cache.get(key);\n        if (!result) {\n          result = await requestFromServer(\n            url,\n            args.query,\n            optionsObject,\n            errorPolicyDefined\n          );\n          await this.cache.set(key, result);\n        }\n      });\n    } else {\n      result = await requestFromServer(\n        url,\n        args.query,\n        optionsObject,\n        errorPolicyDefined\n      );\n    }\n    return result;\n  }\n}\nasync function requestFromServer(url, query, optionsObject, errorPolicyDefined) {\n  const res = await fetch(url, optionsObject);\n  if (!res.ok) {\n    let additionalInfo = \"\";\n    if (res.status === 401) {\n      additionalInfo = \"Please check that your client ID, URL and read only token are configured properly.\";\n    }\n    throw new Error(\n      `Server responded with status code ${res.status}, ${res.statusText}. ${additionalInfo ? additionalInfo : \"\"} Please see our FAQ for more information: https://tina.io/docs/errors/faq/`\n    );\n  }\n  const json = await res.json();\n  if (json.errors && errorPolicyDefined === \"throw\") {\n    throw new Error(\n      `Unable to fetch, please see our FAQ for more information: https://tina.io/docs/errors/faq/\n      Errors: \n\t${json.errors.map((error) => error.message).join(\"\\n\")}`\n    );\n  }\n  const result = {\n    data: json == null ? void 0 : json.data,\n    errors: (json == null ? void 0 : json.errors) || null,\n    query\n  };\n  return result;\n}\nfunction createClient(args) {\n  const client = new TinaClient(args);\n  return client;\n}\nexport {\n  TINA_HOST,\n  TinaClient,\n  createClient\n};\n"],"names":[],"mappings":";;;;;AAAA;;AACA,MAAM,YAAY;AAClB,SAAS,uBAAuB,GAAG,EAAE,WAAW;IAC9C,MAAM,QAAQ,IAAI,KAAK,CAAC;IACxB,IAAI,MAAM,MAAM,GAAG,KAAK,aAAa;QACnC,OAAO,KAAK,CAAC,EAAE,GAAG,YAAY;IAChC,OAAO;QACL,OAAO;IACT;AACF;AACA,MAAM;IACJ,YAAY,EACV,KAAK,EACL,GAAG,EACH,OAAO,EACP,WAAW,EACX,QAAQ,EACT,CAAE;QACD,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,aAAa,GAAG,SAAS,OAAO,KAAK,IAAI,MAAM,IAAI;QACxD,IAAI,CAAC,OAAO,GAAG,QAAQ,IAAI;QAC3B,IAAI,CAAC,WAAW,GAAG,eAAe;QAClC,IAAI,CAAC,QAAQ,GAAG,YAAY;IAC9B;IACA,MAAM,OAAO;QACX,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB;QACF;QACA,IAAI;YACF,IAAI,IAAI,CAAC,QAAQ,IAAI,gBAAkB,eAAe,iDAAmB,aAAa;gBACpF,MAAM,EAAE,SAAS,EAAE,GAAG;gBACtB,IAAI,CAAC,KAAK,GAAG,MAAM,UAAU,IAAI,CAAC,QAAQ;gBAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,sIAAA,CAAA,UAAS;YAChC;QACF,EAAE,OAAO,GAAG;YACV,QAAQ,KAAK,CAAC;QAChB;QACA,IAAI,CAAC,WAAW,GAAG;IACrB;IACA,MAAM,QAAQ,EAAE,WAAW,EAAE,GAAG,MAAM,EAAE,OAAO,EAAE;QAC/C,IAAI;QACJ,MAAM,IAAI,CAAC,IAAI;QACf,MAAM,qBAAqB,eAAe,IAAI,CAAC,WAAW;QAC1D,MAAM,UAAU,IAAI;QACpB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,QAAQ,MAAM,CAAC,aAAa,IAAI,CAAC,aAAa;QAChD;QACA,QAAQ,MAAM,CAAC,gBAAgB;QAC/B,IAAI,WAAW,OAAO,KAAK,IAAI,QAAQ,YAAY,EAAE;YACnD,IAAI,CAAC,KAAK,WAAW,OAAO,KAAK,IAAI,QAAQ,YAAY,KAAK,OAAO,KAAK,IAAI,GAAG,OAAO,EAAE;gBACxF,OAAO,OAAO,CAAC,QAAQ,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,MAAM;oBACjE,QAAQ,MAAM,CAAC,MAAM;gBACvB;YACF;QACF;QACA,MAAM,EAAE,SAAS,CAAC,EAAE,GAAG,sBAAsB,GAAG,CAAC,WAAW,OAAO,KAAK,IAAI,QAAQ,YAAY,KAAK,CAAC;QACtG,MAAM,aAAa,KAAK,SAAS,CAAC;YAChC,OAAO,KAAK,KAAK;YACjB,WAAW,CAAC,QAAQ,OAAO,KAAK,IAAI,KAAK,SAAS,KAAK,CAAC;QAC1D;QACA,MAAM,gBAAgB;YACpB,QAAQ;YACR;YACA,MAAM;YACN,UAAU;YACV,GAAG,oBAAoB;QACzB;QACA,MAAM,cAAc,QAAQ,GAAG,CAAC;QAChC,MAAM,MAAM,uBAAuB,CAAC,QAAQ,OAAO,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,CAAC,MAAM,EAAE;QACtF,IAAI,MAAM;QACV,IAAI;QACJ,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACzB,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK;gBAChC,SAAS,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;gBAC9B,IAAI,CAAC,QAAQ;oBACX,SAAS,MAAM,kBACb,KACA,KAAK,KAAK,EACV,eACA;oBAEF,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;gBAC5B;YACF;QACF,OAAO;YACL,SAAS,MAAM,kBACb,KACA,KAAK,KAAK,EACV,eACA;QAEJ;QACA,OAAO;IACT;AACF;AACA,eAAe,kBAAkB,GAAG,EAAE,KAAK,EAAE,aAAa,EAAE,kBAAkB;IAC5E,MAAM,MAAM,MAAM,MAAM,KAAK;IAC7B,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,IAAI,iBAAiB;QACrB,IAAI,IAAI,MAAM,KAAK,KAAK;YACtB,iBAAiB;QACnB;QACA,MAAM,IAAI,MACR,CAAC,kCAAkC,EAAE,IAAI,MAAM,CAAC,EAAE,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,iBAAiB,iBAAiB,GAAG,0EAA0E,CAAC;IAE3L;IACA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,IAAI,KAAK,MAAM,IAAI,uBAAuB,SAAS;QACjD,MAAM,IAAI,MACR,CAAC;;CAEN,EAAE,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,QAAU,MAAM,OAAO,EAAE,IAAI,CAAC,OAAO;IAEvD;IACA,MAAM,SAAS;QACb,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,IAAI;QACvC,QAAQ,CAAC,QAAQ,OAAO,KAAK,IAAI,KAAK,MAAM,KAAK;QACjD;IACF;IACA,OAAO;AACT;AACA,SAAS,aAAa,IAAI;IACxB,MAAM,SAAS,IAAI,WAAW;IAC9B,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1600, "column": 0}, "map": {"version":3,"sources":["file:///Users/lunaaziz/tutorial-page/ktutorial/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1638, "column": 0}, "map": {"version":3,"sources":["file:///Users/lunaaziz/tutorial-page/ktutorial/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAEgG,EAAC;QAwBnHe,UAAU;;;;;;;;;AAfd,OAAO,MAAMZ,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA,CAED;YAAA,WAAc,0CAA0C;kBAAE,QAAA,CAAA;gBAAA,QAAA;oBAAwB,IAAA;oBAAA;iBAAA;YAAsB;SAAC;IAEzG;IAAA,yDAA4D;QAC5D,KAAO,KAAA;YAAMC,IAAAA,QAAc,IAAIX;YAAAA,CAAmB;SAAA;UAChDY,WAAAA;YAAY,IAAA;YAAA;SAAA;cACVC,MAAMZ,CAAAA;YAAAA,IAAAA,EAAUa,QAAQ;YAAA;SAAA;cACxBC,MAAM,IAAA;YAAA,IAAA;YAAA;SAAA;;OACNC,UAAU;QACV,MAAA;IAAA;CAAA,WAA2C;;;IAK7CI,EAAAA,QAAU,eAAA,sBAAA,CAAA;QACRC,YAAYnB,YAAAA,sBAAAA,CAAAA;AACd,MAAA,eAAA;IACA,SAAA","ignoreList":[0],"debugId":null}}]
}